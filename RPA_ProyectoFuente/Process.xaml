<Activity mc:Ignorable="sap sap2010" x:Class="Process" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>620,2230.66666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="41">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldCollapseAll">False</x:Boolean>
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence sap2010:Annotation.AnnotationText="Invoke major steps of the business process, which are usually implemented by multiple subworkflows.&#xA;&#xA;If a BusinessRuleException is thrown, the transaction is skipped. &#xA;If another kind of exception occurs, the current transaction can be retried. " DisplayName="Process" sap:VirtualizedContainerService.HintSize="476,2166" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="vdtResumen" />
      <Variable x:TypeArguments="sd:DataTable" Name="vdtFlota" />
      <Variable x:TypeArguments="sd:DataTable" Name="vdtArrendadora" />
      <Variable x:TypeArguments="sd:DataTable" Name="vdtResultados" />
      <Variable x:TypeArguments="sd:DataTable" Name="vdtPRs" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="Obtiene Informacion" sap:VirtualizedContainerService.HintSize="434,68" sap2010:WorkflowViewState.IdRef="Sequence_32">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
            <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
            <Literal x:TypeArguments="x:String">Inicia proceso de lectura de informaci√≥n</Literal>
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Resumen Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_5" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaDescargas&quot;).ToString + in_Config(&quot;NombreArchivoResumen&quot;).ToString]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,891.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_39">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="vstrHoja" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
                    <Literal x:TypeArguments="x:String">Resumen...</Literal>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_2" Index="0" Sheet="[vstrHoja]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelGetWorkbookSheet>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtResumen]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_3" Range="A4" SheetName="[vstrHoja]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:FilterDataTable DataTable="[vdtResumen]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,161.333333333333" sap2010:WorkflowViewState.IdRef="FilterDataTable_4" OutputDataTable="[vdtResumen]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="NOTEMPTY">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="8">
                    <InArgument x:TypeArguments="x:String">["Vehiculo Tpo"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Marca"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["L√≠nea"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Modelo"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["SubTotal"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each row As datarow In io_vdtResumen.Rows&#xD;&#xA;&#x9;row(&quot;Serie&quot;)=row(&quot;Serie&quot;).ToString.Trim&#xD;&#xA;Next&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_3">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_vdtResumen">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtResumen" />
                  </InOutArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <ui:AddDataColumn x:TypeArguments="x:String" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" ColumnName="Telemetria" DataTable="[vdtResumen]" DisplayName="Add Data Column" sap:VirtualizedContainerService.HintSize="334,22" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
                <ui:AddDataColumn.DefaultValue>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:AddDataColumn.DefaultValue>
              </ui:AddDataColumn>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Flota Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_6" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaDescargas&quot;).ToString + in_Config(&quot;NombreArchivoFlota&quot;).ToString]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,709.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_41">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="vstrHoja" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
                    <Literal x:TypeArguments="x:String">Flota de unidades nacional...</Literal>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtFlota]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_4" SheetName="Base">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:FilterDataTable DataTable="[vdtFlota]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,161.333333333333" sap2010:WorkflowViewState.IdRef="FilterDataTable_5" OutputDataTable="[vdtFlota]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="8">
                    <InArgument x:TypeArguments="x:String">["N√∫mero de serie"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["TIPO"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Capacidad m¬≥"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Status"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["ORIGEN"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["SERVICIO"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each row As datarow In io_dtFlota.Rows&#xD;&#xA;&#x9;row(&quot;N√∫mero de serie&quot;)=row(&quot;N√∫mero de serie&quot;).ToString.Trim&#xD;&#xA;Next&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_4">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtFlota">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtFlota" />
                  </InOutArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Arrendadora Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_7" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaDescargas&quot;).ToString + in_Config(&quot;NombreArchivoArrendadora&quot;).ToString]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,956" sap2010:WorkflowViewState.IdRef="Sequence_42">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="vstrHoja" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
                    <Literal x:TypeArguments="x:String">Polizas Arrendadora...</Literal>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="334,80" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_3" Index="0" Sheet="[vstrHoja]">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelGetWorkbookSheet>
              <ui:ExcelWriteCell Cell="H1" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_7" SheetName="[vstrHoja]" Text="IncisoId_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteCell>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtArrendadora]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_5" SheetName="[vstrHoja]">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:FilterDataTable DataTable="[vdtArrendadora]" DisplayName="Filter Data Table" FilterRowsMode="Keep" sap:VirtualizedContainerService.HintSize="334,161.333333333333" sap2010:WorkflowViewState.IdRef="FilterDataTable_6" OutputDataTable="[vdtArrendadora]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Column="{x:Null}" Operand="{x:Null}" BooleanOperator="And" Operator="LT" />
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Prima Neta"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["Derechos"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each row As datarow In io_dtArrendadora.Rows&#xD;&#xA;&#x9;row(&quot;Serie&quot;)=row(&quot;Serie&quot;).ToString.Trim&#xD;&#xA;Next&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_5">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtArrendadora">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtArrendadora" />
                  </InOutArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="PRs Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_8" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaDescargas&quot;).ToString + in_Config(&quot;NombreArchivoPRs&quot;).ToString]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,836" sap2010:WorkflowViewState.IdRef="Sequence_43">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="vstrHoja" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="334,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
                    <Literal x:TypeArguments="x:String">Acumulado PRs...</Literal>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtPRs]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_6" Range="A3" SheetName="Acumulado">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:FilterDataTable DataTable="[vdtPRs]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="334,161.333333333333" sap2010:WorkflowViewState.IdRef="FilterDataTable_7" OutputDataTable="[vdtPRs]" SelectColumnsMode="Keep">
                <ui:FilterDataTable.Filters>
                  <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                    <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                      <ui:FilterOperationArgument.Column>
                        <InArgument x:TypeArguments="x:String">["VIN"]</InArgument>
                      </ui:FilterOperationArgument.Column>
                    </ui:FilterOperationArgument>
                  </scg:List>
                </ui:FilterDataTable.Filters>
                <ui:FilterDataTable.SelectColumns>
                  <scg:List x:TypeArguments="InArgument" Capacity="4">
                    <InArgument x:TypeArguments="x:String">["VIN"]</InArgument>
                    <InArgument x:TypeArguments="x:String">["IMPORTE"]</InArgument>
                  </scg:List>
                </ui:FilterDataTable.SelectColumns>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:FilterDataTable>
              <ui:InvokeCode ContinueOnError="{x:Null}" Code="io_dtPRs.DefaultView.Sort = &quot;VIN&quot;&#xD;&#xA;io_dtPRs = io_dtPRs.DefaultView.ToTable&#xD;&#xA;Dim vdtGroupPRs As datatable=io_dtPRs.Clone&#xD;&#xA;'&quot;IMPORTE&quot;&#xD;&#xA;Dim Groupby As String=&quot;&quot;&#xD;&#xA;&#xD;&#xA;For Each row As datarow In io_dtPRs.Rows&#xD;&#xA;If&#x9;row(&quot;IMPORTE&quot;).ToString.Trim=&quot;&quot; Then row(&quot;IMPORTE&quot;)=&quot;0.0&quot;&#xD;&#xA;If Groupby&lt;&gt;row(&quot;VIN&quot;).ToString.Trim Then &#xD;&#xA;&#x9;Groupby=row(&quot;VIN&quot;).ToString.Trim&#xD;&#xA;&#x9;Dim NewRow As DataRow=vdtGroupPRs.NewRow&#xD;&#xA;&#x9;NewRow(&quot;VIN&quot;)=row(&quot;VIN&quot;).ToString.Trim&#xD;&#xA;&#x9;NewRow(&quot;IMPORTE&quot;)=row(&quot;IMPORTE&quot;).ToString.Trim&#xD;&#xA;&#x9;vdtGroupPRs.Rows.Add(NewRow)&#xD;&#xA;Else&#xD;&#xA;vdtGroupPRs.Rows(vdtGroupPRs.Rows.Count-1)(&quot;IMPORTE&quot;)=(CDbl(vdtGroupPRs.Rows(vdtGroupPRs.Rows.Count-1)(&quot;IMPORTE&quot;).ToString)+CDbl(row(&quot;IMPORTE&quot;).ToString)).ToString&#xD;&#xA;End If&#xD;&#xA;Next&#xD;&#xA;&#xD;&#xA;io_dtPRs=vdtGroupPRs&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="334,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
                <ui:InvokeCode.Arguments>
                  <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtPRs">
                    <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtPRs" />
                  </InOutArgument>
                </ui:InvokeCode.Arguments>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:InvokeCode>
              <ui:ExcelWriteRange AddHeaders="False" DataTable="[vdtPRs]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="Orden2" StartingCell="A1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelWriteRange>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
      <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="CECOS Excel Application Scope" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_9" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaDescargas&quot;).ToString + in_Config(&quot;NombreArchivoCecos&quot;).ToString]">
        <ui:ExcelApplicationScope.Body>
          <ActivityAction x:TypeArguments="ui:WorkbookApplication">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="759.333333333333,2684.66666666667" sap2010:WorkflowViewState.IdRef="Sequence_44">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="vstrHoja" />
                <Variable x:TypeArguments="sd:DataTable" Name="vdtPRs" />
                <Variable x:TypeArguments="scg:List(x:String)" Name="vstrHojas" />
                <Variable x:TypeArguments="sd:DataTable" Name="vdtCecosResumen" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="717.333333333333,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
                    <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
                    <Literal x:TypeArguments="x:String">Cecos...</Literal>
                  </InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtCecosResumen]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="717.333333333333,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_8" SheetName="RESUMEN">
                <ui:ExcelReadRange.Range>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </ui:ExcelReadRange.Range>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ExcelReadRange>
              <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="717.333333333333,22" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[vstrHojas]" />
              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="717.333333333333,2278.66666666667" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[vstrHojas]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="680.666666666667,2144" sap2010:WorkflowViewState.IdRef="Sequence_47">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="sd:DataTable" Name="vdtCecos" />
                        <Variable x:TypeArguments="x:String" Name="vstrColumna" />
                      </Sequence.Variables>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[item.Contains(&quot;RESUMEN&quot;) or item.Contains(&quot;Rentas c&quot;) or item.Contains(&quot;opr norm&quot;) or item.Contains(&quot;ope ult mill&quot;) or item.Contains(&quot;SERVICIOS AUTOS&quot;)]" DisplayName="If Hoja Resumen" sap:VirtualizedContainerService.HintSize="638.666666666667,249.333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_1" />
                        </If.Then>
                        <If.Else>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_49">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                      <ui:ExcelReadRange AddHeaders="True" DataTable="[vdtCecos]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="638.666666666667,58.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelReadRange_7" SheetName="[item]">
                        <ui:ExcelReadRange.Range>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ui:ExcelReadRange.Range>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ExcelReadRange>
                      <Assign sap:VirtualizedContainerService.HintSize="638.666666666667,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[vstrColumna]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[(IIF(vdtCecos.Columns("VIN") ISNOT  Nothing,"VIN","SERIE")).ToString]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <ui:FilterDataTable DataTable="[vdtCecos]" DisplayName="Filter Data Table" FilterRowsMode="Remove" sap:VirtualizedContainerService.HintSize="638.666666666667,161.333333333333" sap2010:WorkflowViewState.IdRef="FilterDataTable_9" OutputDataTable="[vdtCecos]" SelectColumnsMode="Keep">
                        <ui:FilterDataTable.Filters>
                          <scg:List x:TypeArguments="ui:FilterOperationArgument" Capacity="4">
                            <ui:FilterOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EMPTY">
                              <ui:FilterOperationArgument.Column>
                                <InArgument x:TypeArguments="x:String">[vstrColumna]</InArgument>
                              </ui:FilterOperationArgument.Column>
                            </ui:FilterOperationArgument>
                          </scg:List>
                        </ui:FilterDataTable.Filters>
                        <ui:FilterDataTable.SelectColumns>
                          <scg:List x:TypeArguments="InArgument" Capacity="4">
                            <InArgument x:TypeArguments="x:String">[vstrColumna]</InArgument>
                          </scg:List>
                        </ui:FilterDataTable.SelectColumns>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:FilterDataTable>
                      <ui:InvokeCode ContinueOnError="{x:Null}" Code="For Each row As datarow In io_dtCecos.Rows&#xD;&#xA;&#x9;row(in_strColumna)=row(in_strColumna).ToString.Trim&#xD;&#xA;Next&#x9;" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="638.666666666667,164" sap2010:WorkflowViewState.IdRef="InvokeCode_7">
                        <ui:InvokeCode.Arguments>
                          <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtCecos">
                            <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtCecos" />
                          </InOutArgument>
                          <InArgument x:TypeArguments="x:String" x:Key="in_strColumna">
                            <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="vstrColumna" />
                          </InArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DataTable="[vdtResumen]" DisplayName="For Each Row in Data Table" sap:VirtualizedContainerService.HintSize="638.666666666667,1157.33333333333" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                        <ui:ForEachRow.Body>
                          <ActivityAction x:TypeArguments="sd:DataRow">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="604.666666666667,1037.33333333333" sap2010:WorkflowViewState.IdRef="Sequence_53">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="ui:GenericValue" Name="vstrResult" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <If Condition="[CurrentRow(&quot;Telemetria&quot;).ToString.Trim&lt;&gt;&quot;&quot;]" DisplayName="If Telemetria " sap:VirtualizedContainerService.HintSize="562.666666666667,249.333333333333" sap2010:WorkflowViewState.IdRef="If_3">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <ui:Continue sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="Continue_2" />
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[vdtCecos]" DisplayName="Lookup Data Table" sap:VirtualizedContainerService.HintSize="562.666666666667,22" sap2010:WorkflowViewState.IdRef="LookupDataTable_1" LookupColumnName="[vstrColumna]" LookupValue="[CurrentRow(&quot;Serie&quot;).ToString.Trim]" TargetColumnName="[vstrColumna]">
                                <ui:LookupDataTable.CellValue>
                                  <OutArgument x:TypeArguments="ui:GenericValue">[vstrResult]</OutArgument>
                                </ui:LookupDataTable.CellValue>
                              </ui:LookupDataTable>
                              <If Condition="[vstrResult isnot Nothing]" sap:VirtualizedContainerService.HintSize="562.666666666667,594" sap2010:WorkflowViewState.IdRef="If_4">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <If.Then>
                                  <Sequence sap:VirtualizedContainerService.HintSize="526,404.666666666667" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:LookupDataTable LookupColumnIndex="{x:Null}" LookupDataColumn="{x:Null}" RowIndex="{x:Null}" TargetColumnIndex="{x:Null}" TargetDataColumn="{x:Null}" DataTable="[vdtCecosResumen]" DisplayName="Lookup Data Table Hoja" sap:VirtualizedContainerService.HintSize="484,22" sap2010:WorkflowViewState.IdRef="LookupDataTable_2" LookupColumnName="Servicio" LookupValue="[item]" TargetColumnName="Costo Unitario">
                                      <ui:LookupDataTable.CellValue>
                                        <OutArgument x:TypeArguments="ui:GenericValue">[vstrResult]</OutArgument>
                                      </ui:LookupDataTable.CellValue>
                                    </ui:LookupDataTable>
                                    <If Condition="[vstrResult isnot Nothing]" sap:VirtualizedContainerService.HintSize="484,250.666666666667" sap2010:WorkflowViewState.IdRef="If_5">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Assign sap:VirtualizedContainerService.HintSize="262,61.3333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Object">[CurrentRow("Telemetria")]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Object">[vstrResult.ToString]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_55">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </ActivityAction>
                        </ui:ForEachRow.Body>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:ForEachRow>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
            </Sequence>
          </ActivityAction>
        </ui:ExcelApplicationScope.Body>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsPinned">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ExcelApplicationScope>
    </Sequence>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Inicia cruce de informaci√≥n con flota de unidades nacional, registros actuales: &quot; + vdtResumen.Rows.Count.ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:JoinDataTables DataTable1="[vdtResumen]" DataTable2="[vdtFlota]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="JoinDataTables_1" JoinType="Left" OutputDataTable="[vdtResumen]">
      <ui:JoinDataTables.Arguments>
        <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
          <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
            <ui:JoinOperationArgument.Column1>
              <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
            </ui:JoinOperationArgument.Column1>
            <ui:JoinOperationArgument.Column2>
              <InArgument x:TypeArguments="x:String">["N√∫mero de serie"]</InArgument>
            </ui:JoinOperationArgument.Column2>
          </ui:JoinOperationArgument>
        </scg:List>
      </ui:JoinDataTables.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:JoinDataTables>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Inicia cruce de informaci√≥n con polizas arrendadora, registros actuales: &quot; + vdtResumen.Rows.Count.ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:JoinDataTables DataTable1="[vdtResumen]" DataTable2="[vdtArrendadora]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="JoinDataTables_2" JoinType="Left" OutputDataTable="[vdtResumen]">
      <ui:JoinDataTables.Arguments>
        <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
          <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
            <ui:JoinOperationArgument.Column1>
              <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
            </ui:JoinOperationArgument.Column1>
            <ui:JoinOperationArgument.Column2>
              <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
            </ui:JoinOperationArgument.Column2>
          </ui:JoinOperationArgument>
        </scg:List>
      </ui:JoinDataTables.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:JoinDataTables>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Inicia cruce de informaci√≥n con Acumulado PRs, registros actuales: &quot; + vdtResumen.Rows.Count.ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:JoinDataTables DataTable1="[vdtResumen]" DataTable2="[vdtPRs]" DisplayName="Join Data Tables" sap:VirtualizedContainerService.HintSize="434,58.6666666666667" sap2010:WorkflowViewState.IdRef="JoinDataTables_3" JoinType="Left" OutputDataTable="[vdtResumen]">
      <ui:JoinDataTables.Arguments>
        <scg:List x:TypeArguments="ui:JoinOperationArgument" Capacity="4">
          <ui:JoinOperationArgument Operand="{x:Null}" BooleanOperator="And" Operator="EQ">
            <ui:JoinOperationArgument.Column1>
              <InArgument x:TypeArguments="x:String">["Serie"]</InArgument>
            </ui:JoinOperationArgument.Column1>
            <ui:JoinOperationArgument.Column2>
              <InArgument x:TypeArguments="x:String">["VIN"]</InArgument>
            </ui:JoinOperationArgument.Column2>
          </ui:JoinOperationArgument>
        </scg:List>
      </ui:JoinDataTables.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:JoinDataTables>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;Generndo template, registros actuales: &quot; + vdtResumen.Rows.Count.ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="out_dtResultados= New DataTable&#xD;&#xA;out_dtResultados.Columns.Add(&quot;VEHICULO TPO&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;TRANSPORTADORA&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;MARCA&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;L√çNEA&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;MODELO&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;SERIE&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;CAPACIDAD&quot;,Type.GetType(&quot;System.String&quot;))     &#xD;&#xA;out_dtResultados.Columns.Add(&quot;ESTATUS&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;CD&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;HUB&quot;,Type.GetType(&quot;System.String&quot;)) &#xD;&#xA;out_dtResultados.Columns.Add(&quot;CE&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;ARRENDAMIENTO&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;ARREND COMISION&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;SEGUROS&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;MANTENIMIENTO&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;TELEMETRIA&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;GASTOS DE PERSONAL&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;GASTOS DE PERSONAL T&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;out_dtResultados.Columns.Add(&quot;TOTAL COSTO FIJO&quot;,Type.GetType(&quot;System.String&quot;))  &#xD;&#xA;&#xD;&#xA;For Each row As datarow In io_dtResumen.Rows&#xD;&#xA;Dim NewRow As DataRow=out_dtResultados.NewRow&#xD;&#xA;NewRow(&quot;VEHICULO TPO&quot;)=row(&quot;Vehiculo Tpo&quot;).ToString&#xD;&#xA;NewRow(&quot;TRANSPORTADORA&quot;)=row(&quot;TIPO&quot;).ToString&#xD;&#xA;NewRow(&quot;MARCA&quot;)=row(&quot;Marca&quot;).ToString&#xD;&#xA;NewRow(&quot;L√çNEA&quot;)=row(&quot;L√≠nea&quot;).ToString&#xD;&#xA;NewRow(&quot;MODELO&quot;)=row(&quot;Modelo&quot;).ToString&#xD;&#xA;NewRow(&quot;SERIE&quot;)=row(&quot;Serie&quot;).ToString&#xD;&#xA;NewRow(&quot;CAPACIDAD&quot;)=row(&quot;Capacidad m¬≥&quot;).ToString&#xD;&#xA;NewRow(&quot;ESTATUS&quot;)=row(&quot;Status&quot;).ToString&#xD;&#xA;NewRow(&quot;CD&quot;)=row(&quot;ORIGEN&quot;).ToString&#xD;&#xA;NewRow(&quot;HUB&quot;)=(IIf(row(&quot;SERVICIO&quot;).ToString.Contains(&quot;HUB&quot;),row(&quot;SERVICIO&quot;).ToString,&quot;&quot;)).ToString&#xD;&#xA;NewRow(&quot;CE&quot;)=(IIf(row(&quot;SERVICIO&quot;).ToString.Contains(&quot;CE&quot;),row(&quot;SERVICIO&quot;).ToString,&quot;&quot;)).ToString&#xD;&#xA;NewRow(&quot;ARRENDAMIENTO&quot;)=row(&quot;SubTotal&quot;).ToString&#xD;&#xA;NewRow(&quot;ARREND COMISION&quot;)=&quot;TBD&quot;&#xD;&#xA;If row(&quot;Prima Neta&quot;).ToString.Trim=&quot;&quot; Then row(&quot;Prima Neta&quot;)=&quot;0&quot;&#xD;&#xA;If row(&quot;Derechos&quot;).ToString.Trim=&quot;&quot; Then row(&quot;Derechos&quot;)=&quot;0&quot;&#xD;&#xA;NewRow(&quot;SEGUROS&quot;)=((CDbl(row(&quot;Prima Neta&quot;).ToString)+CDbl(row(&quot;Derechos&quot;).ToString))).ToString&#xD;&#xA;NewRow(&quot;MANTENIMIENTO&quot;)=row(&quot;IMPORTE&quot;).ToString&#xD;&#xA;NewRow(&quot;TELEMETRIA&quot;)=row(&quot;Telemetria&quot;).ToString&#xD;&#xA;NewRow(&quot;GASTOS DE PERSONAL&quot;)=&quot;&quot;&#xD;&#xA;NewRow(&quot;GASTOS DE PERSONAL T&quot;)=&quot;&quot;&#xD;&#xA;NewRow(&quot;TOTAL COSTO FIJO&quot;)=&quot;&quot;&#xD;&#xA;out_dtResultados.Rows.Add(NewRow)&#xD;&#xA;&#xD;&#xA;Next" DisplayName="Invoke code" sap:VirtualizedContainerService.HintSize="434,164" sap2010:WorkflowViewState.IdRef="InvokeCode_1">
      <ui:InvokeCode.Arguments>
        <InOutArgument x:TypeArguments="sd:DataTable" x:Key="io_dtResumen">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtResumen" />
        </InOutArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="out_dtResultados">
          <mva:VisualBasicReference x:TypeArguments="sd:DataTable" ExpressionText="vdtResultados" />
        </OutArgument>
      </ui:InvokeCode.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeCode>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.EscribeLogsInfo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.EscribeLogsInfo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeLog">
          <Literal x:TypeArguments="x:String">Imprimiendo resultados</Literal>
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="434,454" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_10" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaOutput&quot;).ToString + in_Config(&quot;NombreArchivoResultados&quot;).ToString]">
      <ui:ExcelApplicationScope.Body>
        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="376,305.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_45">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="vstrHoja" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[vdtResumen]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_1" SheetName="Resultados PRE" StartingCell="A1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
            <ui:ExcelWriteRange AddHeaders="True" DataTable="[vdtResultados]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="334,86.6666666666667" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_3" SheetName="Resultados" StartingCell="A1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ExcelWriteRange>
          </Sequence>
        </ActivityAction>
      </ui:ExcelApplicationScope.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:ExcelApplicationScope>
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke Gral.NotificaCorreo workflow" sap:VirtualizedContainerService.HintSize="434,113.333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" LogEntry="No" LogExit="No" UnSafe="False" WorkflowFileName="Generales\Gral.NotificaCorreo.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">
          <mva:VisualBasicValue x:TypeArguments="scg:Dictionary(x:String, x:Object)" ExpressionText="in_Config" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Correo">
          <Literal x:TypeArguments="x:String">Final</Literal>
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_MensajeError">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Adjunto">
          <mva:VisualBasicValue x:TypeArguments="x:String" ExpressionText="in_Config(&quot;RutaLocal&quot;).ToString + Environment.UserName + in_Config(&quot;RutaMatriz&quot;).ToString + in_Config(&quot;RutaOutput&quot;).ToString + in_Config(&quot;NombreArchivoResultados&quot;).ToString" />
        </InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>